#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass ulb_thesis
\options draftfoot
\use_default_options false
\maintain_unincluded_children false
\language american
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 11
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 1
\use_package esint 0
\use_package mathdots 0
\use_package mathtools 1
\use_package mhchem 0
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Formula $\textrm{SVOps}^{\vdash}=\left\{ x\vdash\mid x\in\textrm{SVars}\right\} $
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\textrm{SVOps}^{\dashv}=\left\{ x\dashv\mid x\in\textrm{SVars}\right\} $
\end_inset


\end_layout

\begin_layout Standard
SVOps
\begin_inset Formula $=\textrm{SVOps}^{\vdash}\cup\textrm{SVOps}^{\dashv}$
\end_inset


\end_layout

\begin_layout Definition
An extended 
\emph on
variable-set automaton
\emph default
 (or 
\emph on
eVset-automaton
\emph default
) is a tuple 
\begin_inset Formula $\left(Q,q_{0},q_{f},\delta\right)$
\end_inset

, where:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $Q$
\end_inset

 is a finite set of states;
\end_layout

\begin_layout Itemize
\begin_inset Formula $q_{0}\in Q$
\end_inset

 is the initial state;
\end_layout

\begin_layout Itemize
\begin_inset Formula $q_{f}\in Q$
\end_inset

 is an accepting state;
\end_layout

\begin_layout Itemize
\begin_inset Formula $\delta$
\end_inset

 is a finite transition relation consisting of triples, each having one
 of these forms:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $\left(q,\sigma,q'\right)$
\end_inset

, where 
\begin_inset Formula $\sigma\in\varSigma$
\end_inset

;
\end_layout

\begin_layout Itemize
\begin_inset Formula $\left(q,S,q'\right)$
\end_inset

, where 
\begin_inset Formula $S\subseteq\left(\textrm{SVOps}\right)$
\end_inset

.
\end_layout

\end_deeper
\end_deeper
\begin_layout --Separator--

\end_layout

\begin_layout Definition
\noindent
A (extended) variable-set automaton 
\begin_inset Formula $A$
\end_inset

 is well-behaved if every vset-path 
\begin_inset Formula $p$
\end_inset

 of 
\begin_inset Formula $A$
\end_inset

 is well-behaved.
\end_layout

\begin_layout --Separator--
\noindent

\end_layout

\begin_layout Lemma
\noindent
Given an extended varable-set automaton 
\begin_inset Formula $A=\left(Q,q_{0},q_{f},\delta\right)$
\end_inset

, 
\begin_inset Formula $A$
\end_inset

 can be converted into an equivalent variable-set automaton 
\begin_inset Formula $A'$
\end_inset

 in polynomial time in a well-behavedness preserving manner.
\end_layout

\begin_layout Proof
Without loss of generality, we consider an ordering of the symbols in 
\begin_inset Formula $\textrm{SVOps}\left(A\right)$
\end_inset

 of the following form:
\begin_inset Formula 
\[
x\vdash,\ldots,y\vdash,x\dashv,\ldots,y\dashv
\]

\end_inset

 In this ordering, all insertion operations come before the deletion operations.
 We define 
\begin_inset Formula $o\prec o'$
\end_inset

, 
\begin_inset Formula $o,o'\in\textrm{SVOps}\left(A\right)$
\end_inset

, if 
\begin_inset Formula $o$
\end_inset

 comes before 
\begin_inset Formula $o'$
\end_inset

 (
\emph on
not
\emph default
 if they are equal) in the chosen ordering.
 Consider 
\begin_inset Formula $A'=$
\end_inset


\begin_inset Formula $\left(Q',q_{0}',q_{f}',\delta'\right)$
\end_inset

, with 
\begin_inset Formula $\textrm{SVars}\left(A'\right)=\textrm{SVars}\left(A\right)$
\end_inset

, whose components are defined as follows:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $Q'=Q\cup Q^{\textrm{ops}}\cup Q^{\textrm{Ø}}$
\end_inset

, where:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $Q^{\textrm{ops}}=\left\{ q_{q',o,q''}\mid\exists\left(q',S,q''\right)\in\delta:o\in S\right\} $
\end_inset

;
\end_layout

\begin_layout Itemize
\begin_inset Formula $Q^{\textrm{Ø}}=\left\{ q_{\textrm{q',Ø,q''}}\mid\exists\left(q',\textrm{Ø},q''\right)\in\delta\right\} $
\end_inset

;
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Formula $q_{0}'=q_{0};$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $q_{f}'=q_{f}$
\end_inset

;
\end_layout

\begin_layout Itemize
\begin_inset Formula $\delta'=\left(\delta\setminus\delta^{S}\right)\cup\delta^{\textrm{ops}}\cup\delta^{\textrm{Ø}}\cup\delta^{\varepsilon}$
\end_inset

, where:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $\delta^{S}=\left\{ \left(q,S,q'\right)\in\delta\right\} ;$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\delta^{\textrm{ops}}=\left\{ \left(q_{q',o,q''},o,q_{q',o',q''}\right)\mid\exists\left(q',S,q''\right)\in\delta:\left(o,o'\epsilon S\land o\prec o'\land\forall o''\in S:o\nprec o''\nprec o'\right)\right\} \cup\left\{ \left(q_{q',o,q''},o,q''\right)\mid\exists\left(q',S,q''\right)\in\delta:\left(o\epsilon S\land\forall o'\in S:o\nprec o'\right)\right\} $
\end_inset

;
\end_layout

\begin_layout Itemize
\begin_inset Formula $\delta^{\textrm{Ø}}=\left\{ \left(q_{\textrm{q',Ø,q''}},\varepsilon,q''\right)\mid\exists\left(q',\textrm{Ø},q''\right)\in\delta\right\} ;$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\delta^{\varepsilon}=\left\{ \left(q,\varepsilon,q'\right)\mid\left(\exists\left(q',o,q''\right)\in\delta^{\textrm{ops}}:\forall\left(q',o',q''\right)\in\delta^{\textrm{ops}}:o'\nprec o\right)\lor\left(\exists\left(q',\varepsilon,q''\right)\in\delta^{\textrm{Ø}}\right)\right\} $
\end_inset

.
\end_layout

\end_deeper
\end_deeper
\begin_layout Proof
This construction expands the transitions of 
\begin_inset Formula $A$
\end_inset

 that are labeled with a set of variable operations into a sequence of transitio
ns performing one operation at a time, taking care of putting the insertion
 operations before the deletion ones, thus preserving well-behavedness.
 It also substitutes transitions labeled with the empty set with ordinary
 
\begin_inset Formula $\varepsilon-$
\end_inset

transitions.
 To prove equivalence between 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $A'$
\end_inset

 it is sufficient to notice that for every string 
\begin_inset Formula $\mathbf{s}$
\end_inset

, every run 
\begin_inset Formula $\rho=c_{0},\ldots,c_{m}$
\end_inset


\begin_inset Formula $\in\textrm{ARuns}\left(A,\mathbf{s}\right)$
\end_inset

 can be put in correspondence with a run 
\begin_inset Formula $\rho'\in\textrm{ARuns}\left(A',\mathbf{s}\right)$
\end_inset

.
 Indeed, for every pair of consecutive configurations 
\begin_inset Formula $c_{j}=\left(q_{j},V_{j},Y_{j},i_{j}\right)$
\end_inset

, 
\begin_inset Formula $c_{j+1}=\left(q_{j+1},V_{j+1},Y_{j+1},i_{j+1}\right)$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Itemize
if 
\begin_inset Formula $i_{j}=i_{j+1}$
\end_inset

 and 
\begin_inset Formula $\left(q,S,q'\right)$
\end_inset


\begin_inset Formula $\in\delta$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Itemize
if 
\begin_inset Formula $V_{j}\neq V_{j+1}$
\end_inset

, replace 
\begin_inset Formula $c_{j}$
\end_inset

, 
\begin_inset Formula $c_{j+1}$
\end_inset

 with a sequence 
\begin_inset Formula $c_{j,1},\ldots,c_{j,k}$
\end_inset

 of configurations, where:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $c_{j,1}=c_{j}$
\end_inset

;
\end_layout

\begin_layout Itemize
\begin_inset Formula $c_{j,k}=c_{j+1}$
\end_inset

; 
\end_layout

\begin_layout Itemize
\begin_inset Formula $c_{j,2}=\left(q_{j,2},V_{j,1},Y_{j,1},i_{j}\right)$
\end_inset

 (
\begin_inset Formula $\left(q_{j,1},\varepsilon,q_{j,2}\right)\in\delta^{\varepsilon})$
\end_inset

;
\end_layout

\begin_layout Itemize
for every pair 
\begin_inset Formula $c_{j,l}=\left(q_{j,l},V_{j,l},Y_{j,l},i_{j}\right),c_{j,l+1}=\left(q_{j,l+1},V_{j,l+1},Y_{j,l+1},i_{j}\right)$
\end_inset

, different from 
\begin_inset Formula $c_{j,1},c_{j,2}$
\end_inset

, there exists a transition 
\begin_inset Formula $\left(q_{j,l},o,q_{j,l+1}\right)\in\delta^{\textrm{ops}}$
\end_inset

 such that 
\begin_inset Formula $o\in S$
\end_inset

 and 
\begin_inset Formula $V_{j,l+1},Y_{j,l+1}$
\end_inset

 are obtained from 
\begin_inset Formula $V_{j,l},Y_{j,l}$
\end_inset

 according to 
\begin_inset Formula $o$
\end_inset

;
\end_layout

\end_deeper
\begin_layout Itemize
if 
\begin_inset Formula $V_{j}=V_{j+1}$
\end_inset

, replace 
\begin_inset Formula $c_{j}$
\end_inset

, 
\begin_inset Formula $c_{j+1}$
\end_inset

with 
\begin_inset Formula $c_{j,1},c_{j,2},c_{j,3}$
\end_inset

, where:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $c_{j,1}$
\end_inset

 and 
\begin_inset Formula $c_{j,2}$
\end_inset

 are as in the previous case;
\end_layout

\begin_layout Itemize
\begin_inset Formula $c_{j,3}=c_{j+1}$
\end_inset

;
\end_layout

\begin_layout Itemize
there exists a transition 
\begin_inset Formula $\left(q_{j,2},\textrm{Ø},q_{j,3}\right)\in\delta^{\textrm{Ø}}$
\end_inset

 and 
\begin_inset Formula $V_{j,3}=V_{j,l}$
\end_inset

, 
\begin_inset Formula $Y_{j,3}=Y_{j,2}$
\end_inset

;
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
if 
\begin_inset Formula $i_{j+1}=i_{j}+1$
\end_inset

, do nothing.
\end_layout

\end_deeper
\begin_layout Proof
After having applied this modifications to 
\begin_inset Formula $\rho$
\end_inset

, the obtained run 
\begin_inset Formula $\rho'$
\end_inset

 will be a valid run of 
\begin_inset Formula $A'$
\end_inset

 on 
\begin_inset Formula $\mathbf{s}$
\end_inset

 and it will be accepting if and only if 
\begin_inset Formula $\rho$
\end_inset

 was accepting, in which case it will return the same 
\begin_inset Formula $\mathbf{s}-$
\end_inset

tuple returned by 
\begin_inset Formula $\rho$
\end_inset

.
 This is because the only occasions where we actually modify 
\begin_inset Formula $\rho$
\end_inset

 is when we are performing variable operations between a configuration and
 the next one.
 In this case, we are not advancing the string pointer.
 The new series of configurations we put in place of the original pair doesn't
 advance the pointer either, and it performs the exact variable operations
 that were performed before the substitution, insertions first, thanks to
 the way we constructed 
\begin_inset Formula $A'$
\end_inset

.
 Thus, for every pair of configurations 
\begin_inset Formula $c_{j},c_{j+1}\in\rho$
\end_inset

 that we replace, 
\begin_inset Formula $c_{j+2}$
\end_inset

 won't see any difference.
 Also notice how the replaced sequence 
\begin_inset Formula $c_{j,1},\ldots,c_{j,k}$
\end_inset

 is unique, and the sequence of operations from 
\begin_inset Formula $c_{j,1}$
\end_inset

 to 
\begin_inset Formula $c_{j,k}$
\end_inset

 respect the operation ordering that we chose.
 It can also easily be verified that well-behavedness is preserved.
\end_layout

\begin_layout Proof
\noindent
It remains to show that the construction of 
\begin_inset Formula $A'$
\end_inset

 can be carried in polynomial time.
 Let us refer to the size of 
\begin_inset Formula $A$
\end_inset

 as 
\begin_inset Formula $n$
\end_inset

.
 We consider 
\begin_inset Formula $n=\left|Q\right|+\left|\delta\right|+\left|\textrm{SVars}\left(A\right)\right|$
\end_inset

.
 We can reasonably assume that the operations of adding a new state, adding
 a new transition, removing a state and removing a transition take constant
 time.
 Thus, expanding a single transition of 
\begin_inset Formula $A$
\end_inset

 takes 
\begin_inset Formula $O\left(\left|\textrm{SVars}\left(A\right)\right|\right)=O\left(n\right)$
\end_inset

 time.
 Expanding every transition that is needed will then take 
\begin_inset Formula $O\left(\left|\textrm{SVars}\left(A\right)\right|\cdot\left|\delta\right|\right)=O\left(n^{2}\right)$
\end_inset

 time.
\end_layout

\begin_layout Proof
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Definition
\noindent
Given a (extended) vset-automaton 
\begin_inset Formula $A=\left(Q,q_{0},q_{f},\delta\right)$
\end_inset

, a vset-path 
\begin_inset Formula $p$
\end_inset

 of 
\begin_inset Formula $A$
\end_inset

 is a sequence of transitions 
\begin_inset Formula $t_{1},$
\end_inset


\begin_inset Formula $\ldots,t_{n}\in\delta$
\end_inset

, such that for every pair 
\begin_inset Formula $t_{i},t_{i+1}$
\end_inset

, the destination state of 
\begin_inset Formula $t_{i}$
\end_inset

 equals the source state of 
\begin_inset Formula $t_{i+1}$
\end_inset

.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Definition
\noindent
Given a (extended) vset-automaton 
\begin_inset Formula $A=\left(Q,q_{0},q_{f},\delta\right)$
\end_inset

, a vset-path 
\begin_inset Formula $p=t_{1},\ldots,t_{n}$
\end_inset

 of 
\begin_inset Formula $A$
\end_inset

 is complete if:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $t_{1}$
\end_inset

 has 
\begin_inset Formula $q_{0}$
\end_inset

 as source state;
\end_layout

\begin_layout Itemize
\begin_inset Formula $t_{n}$
\end_inset

 has 
\begin_inset Formula $q$
\end_inset


\begin_inset Formula $_{f}$
\end_inset

 as destination state;
\end_layout

\end_deeper
\begin_layout --Separator--

\end_layout

\begin_layout Definition
\noindent
Given a (extended) vset-automaton 
\begin_inset Formula $A=\left(Q,q_{0},q_{f},\delta\right)$
\end_inset

, a vset-path 
\begin_inset Formula $p=t_{1},\ldots,t_{n}$
\end_inset

 of 
\begin_inset Formula $A$
\end_inset

 is well-behaved if the following hold:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $p$
\end_inset

 is complete;
\end_layout

\begin_layout Itemize
for every operation 
\begin_inset Formula $o\in\textrm{SVOps}\left(A\right)$
\end_inset

, 
\begin_inset Formula $o$
\end_inset

 appears in exactly one transition 
\begin_inset Formula $t_{i}$
\end_inset

 of 
\begin_inset Formula $p$
\end_inset

;
\end_layout

\begin_layout Itemize
for every pair 
\begin_inset Formula $t_{i},t_{j}$
\end_inset

, if 
\begin_inset Formula $x\vdash$
\end_inset

 appears in 
\begin_inset Formula $t_{i}$
\end_inset

 and 
\begin_inset Formula $\dashv x$
\end_inset

 appears in 
\begin_inset Formula $t_{j}$
\end_inset

, then 
\begin_inset Formula $i\leq j$
\end_inset

.
\end_layout

\end_deeper
\begin_layout --Separator--

\end_layout

\begin_layout Definition
\noindent
Given an extended vset-automaton 
\begin_inset Formula $A$
\end_inset

, the epsilon-closure of 
\begin_inset Formula $A$
\end_inset

 is an extended vset-automaton 
\begin_inset Formula $A'=\left(Q',q_{0}',q_{f}',\delta'\right)$
\end_inset

 , where:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $Q'=Q$
\end_inset

;
\end_layout

\begin_layout Itemize
\begin_inset Formula $q_{0}'=q_{0}$
\end_inset

;
\end_layout

\begin_layout Itemize
\begin_inset Formula $q_{f}'=q_{f}$
\end_inset

;
\end_layout

\begin_layout Itemize
\begin_inset Formula $\delta\subseteq\delta'$
\end_inset

;
\end_layout

\begin_layout Itemize
for every sequence of triples 
\begin_inset Formula $\left(q_{1},S_{1},q'_{1}\right),\ldots,\left(q_{n},S_{n},q'_{n}\right)\in\delta$
\end_inset

 such that 
\begin_inset Formula $\forall i$
\end_inset

,
\begin_inset Formula $1\leq i<n$
\end_inset

 we have 
\begin_inset Formula $q'_{i}=q_{i+1}$
\end_inset

, 
\begin_inset Formula $\delta'$
\end_inset

 contains a triple 
\begin_inset Formula $\left(q_{1},\bigcup_{i}S_{i},q_{n}\right)$
\end_inset

 and no additional triples that don't belong to 
\begin_inset Formula $\delta$
\end_inset

.
\end_layout

\end_deeper
\begin_layout --Separator--

\end_layout

\begin_layout Theorem
\noindent
Given two extended vset-automata 
\begin_inset Formula $A$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

 that are union-compatible, a third vset-automaton 
\begin_inset Formula $C$
\end_inset

 can be produced in polynomial time such that 
\begin_inset Formula $\left\llbracket C\right\rrbracket =\left\llbracket A\right\rrbracket \cup\left\llbracket B\right\rrbracket $
\end_inset

, in a well-behavedness preserving manner.
\end_layout

\begin_layout Proof
Let us consider 
\begin_inset Formula $A$
\end_inset

 to be of the form 
\begin_inset Formula $\left(Q^{A},q_{0}^{A},q_{f}^{A},\delta^{A}\right)$
\end_inset

 and 
\begin_inset Formula $B$
\end_inset

 of the form 
\begin_inset Formula $\left(Q^{B},q_{0}^{B},q_{f}^{B},\delta^{B}\right)$
\end_inset

.
 We can take 
\begin_inset Formula $C=\left(Q^{C},q_{0}^{C},q_{f}^{C},\delta^{C}\right)$
\end_inset

, where:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $Q^{C}=Q^{A}\cup Q^{B}$
\end_inset

;
\end_layout

\begin_layout Itemize
\begin_inset Formula $q_{0}^{C}=q_{0}^{A}$
\end_inset

;
\end_layout

\begin_layout Itemize
\begin_inset Formula $q_{f}^{C}=q_{f}^{A}$
\end_inset

;
\end_layout

\begin_layout Itemize
\begin_inset Formula $\delta^{C}=\delta^{A}\cup\delta^{B}\cup\left\{ \left(q_{0}^{C},\textrm{Ø},q_{0}^{B}\right),\left(q_{f}^{B},\textrm{Ø},q_{f}^{C}\right)\right\} $
\end_inset

.
\end_layout

\end_deeper
\begin_layout Proof
In this construction, we allow to go from the initial state of 
\begin_inset Formula $A$
\end_inset

 to the one of 
\begin_inset Formula $B$
\end_inset

, and to go from the final state of 
\begin_inset Formula $B$
\end_inset

 to the one of 
\begin_inset Formula $A$
\end_inset

.
 Thus, given a string 
\begin_inset Formula $\mathbf{s}$
\end_inset

, 
\begin_inset Formula $C$
\end_inset

 can span exactly the 
\begin_inset Formula $\left(V,\mathbf{s}\right)-$
\end_inset

tuples contained in 
\begin_inset Formula $A\left(\mathbf{s}\right)\cup B\left(\mathbf{s}\right)$
\end_inset

.
 Regarding the complexity, the operations that we perform here are the union
 of the states sets and transition functions, with the addition of two new
 transitions.
 Let us consider the size of the input as 
\begin_inset Formula $n=n_{A}+n_{B}=\left|Q^{A}\right|+\left|\delta^{A}\right|+\left|\textrm{SVars}\left(A\right)\right|+\left|Q^{B}\right|+\left|\delta^{B}\right|+\left|\textrm{SVars}\left(B\right)\right|$
\end_inset

.
 If we assume the costs of basic operations as adding/deleting a state/transitio
ns to be constant, then obtaining 
\begin_inset Formula $Q^{C}$
\end_inset

 takes 
\begin_inset Formula $O\left(\left|Q^{B}\right|\right)=O\left(n\right)$
\end_inset

 time, and constructing 
\begin_inset Formula $\delta^{C}$
\end_inset

 takes 
\begin_inset Formula $O\left(\left|\delta^{B}\right|\right)=O\left(n\right)$
\end_inset

 time.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Theorem
\noindent
Given a well-behaved extended vset-automaton 
\begin_inset Formula $A$
\end_inset

, a set 
\begin_inset Formula $X=\textrm{SVars}\left(A\right)$
\end_inset

 and a set 
\begin_inset Formula $Y\subseteq X$
\end_inset

, a vset-automaton 
\begin_inset Formula $A'$
\end_inset

 can be produced in polynomial time such that 
\begin_inset Formula $\left\llbracket A'\right\rrbracket =\pi_{Y}\left\llbracket A\right\rrbracket $
\end_inset

, in a well-behavedness preserving manner.
\end_layout

\begin_layout Proof
Let us consider 
\begin_inset Formula $A=\left(Q,q_{0},q_{f},\delta\right)$
\end_inset

.
 We can take 
\begin_inset Formula $A'=\left(Q',q_{0}',q_{f}',\delta'\right)$
\end_inset

, where:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $Q'=Q$
\end_inset

;
\end_layout

\begin_layout Itemize
\begin_inset Formula $q_{0}'=q_{0}$
\end_inset

;
\end_layout

\begin_layout Itemize
\begin_inset Formula $q_{f}'=q_{f}$
\end_inset

;
\end_layout

\begin_layout Itemize
\begin_inset Formula $\delta'=\delta\setminus\delta^{\textrm{unprojected}}\cup\delta^{\textrm{projected}}$
\end_inset

, where:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $\delta^{\textrm{unprojected}}=\left\{ \left(q,S,q'\right)\in\delta\mid S\cap\textrm{SVOps}\left(X\setminus Y\right)\neq\textrm{Ø}\right\} $
\end_inset

;
\end_layout

\begin_layout Itemize
\begin_inset Formula $\delta^{\textrm{projected}}=\left\{ \left(q,S',q'\right)\mid\exists\left(q,S,q'\right)\in\delta^{\textrm{unprojected}}:S'=S\setminus\textrm{SVOps}\left(X\setminus Y\right)\right\} $
\end_inset

.
\end_layout

\end_deeper
\end_deeper
\begin_layout Proof
This construction removes all the occurencies of variable operations that
 concern variables excluded from the projection in the transitions of 
\begin_inset Formula $A$
\end_inset

.
 Since 
\begin_inset Formula $A$
\end_inset

 is well behaved, we have the guarantee that 
\begin_inset Formula $A'=A$
\end_inset

.
 If this wasn't the case, our construction might result in 
\begin_inset Formula $A\subseteq A'$
\end_inset

.
 
\begin_inset Formula $A'$
\end_inset

 is still well-behaved, since we maintain the occurrencies of operations
 concerning the variables on which we project, that continue to appear exactly
 once on each path.
 With the usual assumptions, this construction can be carried out in 
\begin_inset Formula $O\left(n\right)$
\end_inset

.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Definition
An AQL core fragment is an AQL fragment that can be associated with a core
 spanner.
\end_layout

\begin_layout --Separator--

\end_layout

\begin_layout Theorem
Given a regex formula 
\begin_inset Formula $\gamma$
\end_inset

, 
\begin_inset Formula $\gamma$
\end_inset

 can be converted into an equivalent, well-behaved extended vset-automaton
 
\begin_inset Formula $A$
\end_inset

 in polynomial time.
\end_layout

\end_body
\end_document
